{"version":3,"sources":["features/messageboard/MessageBoard.module.css","features/popup/PopUp.module.css","features/messageboard/messageBoardSlice.ts","features/popup/PopUp.tsx","features/messageboard/MessageBoard.tsx","features/flaggyFlag/FlaggyFlag.tsx","features/navbar/TopMenu.tsx","App.tsx","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx","features/navbar/TopMenu.module.css","features/flaggyFlag/FlaggyFlag.module.css"],"names":["module","exports","messageBoardSlice","createSlice","name","initialState","value","reducers","addMessage","state","action","slice","push","payload","deleteMessage","splice","clearMessages","shuffle","console","log","sort","Math","random","actions","selectMessages","messages","PopUp","index","handleClose","className","styles","modelContainer","popup","onClick","MessageBoard","useSelector","dispatch","useDispatch","useState","input","setInput","message","popupMessage","setPopupmessage","container","messageBoard","mbHeader","mbH1","mbMsgContainer","id","map","key","mbMsg","mbForm","msgInputTextarea","cols","rows","onChange","e","target","msgSubmitBtn","FlaggyFlag","background","black","white","grey","TopMenu","navbar","navLeft","navbarRight","navButton","window","location","href","App","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","messagesReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9b2e3d8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"MessageBoard_navbar__39qfk\",\"placeholder\":\"MessageBoard_placeholder__31r2O\",\"navbarRight\":\"MessageBoard_navbarRight__3aufY\",\"navLeft\":\"MessageBoard_navLeft__1CJHR\",\"navButton\":\"MessageBoard_navButton__12C9v\",\"container\":\"MessageBoard_container__3iRET\",\"mbHeader\":\"MessageBoard_mbHeader__MjeTr\",\"messageBoard\":\"MessageBoard_messageBoard__2FkSt\",\"mbMsgContainer\":\"MessageBoard_mbMsgContainer__24VYP\",\"mbMsg\":\"MessageBoard_mbMsg__304zW\",\"opacity\":\"MessageBoard_opacity__KvoD3\",\"mbForm\":\"MessageBoard_mbForm__1AW7O\",\"msgInputTextarea\":\"MessageBoard_msgInputTextarea__17VTV\",\"mbH1\":\"MessageBoard_mbH1__1xjzK\",\"msgSubmitBtn\":\"MessageBoard_msgSubmitBtn__3jf98\",\"background\":\"MessageBoard_background__3nLcM\",\"black\":\"MessageBoard_black__3jUM5\",\"white\":\"MessageBoard_white__3-bF0\",\"grey\":\"MessageBoard_grey__24kKd\",\"description\":\"MessageBoard_description__3iSHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"PopUp_navbar__18ntE\",\"placeholder\":\"PopUp_placeholder__12BA9\",\"navbarRight\":\"PopUp_navbarRight__1BRW0\",\"navLeft\":\"PopUp_navLeft__1Tp6b\",\"navButton\":\"PopUp_navButton__mBaYC\",\"container\":\"PopUp_container__1ynVc\",\"mbHeader\":\"PopUp_mbHeader__678R3\",\"messageBoard\":\"PopUp_messageBoard__18eJA\",\"mbMsgContainer\":\"PopUp_mbMsgContainer__3DNKi\",\"mbMsg\":\"PopUp_mbMsg__VnsOE\",\"opacity\":\"PopUp_opacity__BmYbi\",\"mbForm\":\"PopUp_mbForm__2uD2N\",\"msgInputTextarea\":\"PopUp_msgInputTextarea__27hWx\",\"mbH1\":\"PopUp_mbH1__XJTsW\",\"msgSubmitBtn\":\"PopUp_msgSubmitBtn__3k_tV\",\"background\":\"PopUp_background__yoI1_\",\"black\":\"PopUp_black__2w4lb\",\"white\":\"PopUp_white__MBHvR\",\"grey\":\"PopUp_grey__fSvWO\",\"description\":\"PopUp_description__2Ga-r\",\"popup\":\"PopUp_popup__3Oe9c\",\"modelContainer\":\"PopUp_modelContainer__1iz8f\"};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\nimport {act} from \"react-dom/test-utils\";\r\n\r\ninterface MessagesState {\r\n  value: Array<string>;\r\n}\r\n\r\n\r\n\r\nconst initialState: MessagesState = {\r\n  value: [\"The most beautiful msg board I have ever seen\",\"Flaggy flag forever\",\"One true flag\",\"Flaggy flag\"]\r\n};\r\n\r\nexport const messageBoardSlice = createSlice({\r\n  name: 'messages',\r\n  initialState,\r\n  reducers: {\r\n    addMessage: (state, action: PayloadAction<string>) => {\r\n      let value = state.value.slice();\r\n      value.push(action.payload)\r\n      return {value:value}\r\n    },\r\n      deleteMessage: (state, action: PayloadAction<number>) => {\r\n\r\n      // let value = state.value.slice();\r\n        // value.splice(action.payload,1);\r\n        state.value.splice(action.payload,1)\r\n        // return {value:value};\r\n      },\r\n    clearMessages: state => {\r\n      state.value = [];\r\n    },\r\n    shuffle: state =>{\r\n      console.log(\"shuffle\");\r\n      state.value.sort(()=>Math.random()-0.5);\r\n    }\r\n  },\r\n});\r\n\r\nexport const { addMessage, clearMessages, shuffle, deleteMessage} = messageBoardSlice.actions;\r\n\r\n\r\nexport const selectMessages = (state: RootState) => state.messages.value;\r\n\r\nexport default messageBoardSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport styles from './PopUp.module.css';\r\n\r\nexport function PopUp({messages, index, handleClose}:{messages:string, index: number, handleClose: ()=>void}) {\r\n  return (\r\n        <div className={styles.modelContainer}>\r\n          <div className={styles.popup} onClick={()=>{handleClose()}}>\r\n              <h1>index: {index}</h1>\r\n              <h4>{messages}</h4>\r\n          </div>\r\n        </div>\r\n\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  addMessage,\r\n  clearMessages,\r\n    shuffle,\r\n    deleteMessage,\r\n  selectMessages,\r\n} from './messageBoardSlice';\r\nimport styles from './MessageBoard.module.css';\r\nimport {PopUp} from \"../popup/PopUp\";\r\n\r\n\r\nexport function MessageBoard() {\r\n\r\n  const messages = useSelector(selectMessages);\r\n  const dispatch = useDispatch();\r\n  const [input, setInput] = useState('');\r\n  const [popupMessage, setPopupmessage] = useState({index:-1,message:\"\"})\r\n  const handleClose = ()=>{setPopupmessage({index:-1,message:\"\"})}\r\n\r\n  return (\r\n      <div className={styles.container}>\r\n        <div className={styles.messageBoard}>\r\n          <div className={styles.mbHeader}>\r\n            <h1 className={styles.mbH1}>\r\n              @ VerY FunCt1on@l m3ss@ge b0ard tHat d0e$ not sto3 y03 me$$Age\r\n            </h1>\r\n          </div>\r\n          <div className={styles.mbMsgContainer} id=\"mb-msg-container\">\r\n            {messages.map((message,index)=>{\r\n              return <div key={index} className={styles.mbMsg}><span onClick={()=>{setPopupmessage({index: index, message: message});dispatch(shuffle()); console.log(messages); }}>{message}</span>\r\n                <button onClick ={()=>{dispatch(deleteMessage(index))}}>delete</button></div>\r\n            })}\r\n          </div>\r\n          <div className={styles.mbForm}>\r\n            <textarea className={styles.msgInputTextarea} cols={50} rows={6} id=\"textInput\" value={input} onChange={(e)=>{setInput(e.target.value)}}/>\r\n            <button className={styles.msgSubmitBtn} onClick={()=>{dispatch(addMessage(input));setInput(\"\")}}>Post</button>\r\n            <button className={styles.msgSubmitBtn} onClick={()=>{dispatch(clearMessages())}}>Clear</button>\r\n            <button className={styles.msgSubmitBtn} onClick={()=>{setInput(\"\")}}>Clear From</button>\r\n          </div>\r\n        </div>\r\n        {popupMessage.index!==-1? <PopUp messages={popupMessage.message}  handleClose={handleClose} index={popupMessage.index}/>:null}\r\n      </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nimport styles from './FlaggyFlag.module.css';\r\n\r\nexport function FlaggyFlag() {\r\n    const [input, setInput] = useState('');\r\n\r\n    return (\r\n        <div className={styles.background}>\r\n            <div className={styles.black}/>\r\n            <div className={styles.white}/>\r\n            <div className={styles.grey}/>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nimport styles from './TopMenu.module.css';\r\n\r\nexport function TopMenu() {\r\n    return (\r\n        <nav>\r\n            <div className={styles.navbar}>\r\n                <div className={styles.navLeft}>\r\n                    <div>Home</div>\r\n                </div>\r\n                <div className={styles.navbarRight}>\r\n                    <div className={styles.navButton}>About</div>\r\n                    <div className={styles.navButton}>Project</div>\r\n                    <div className={styles.navButton}\r\n                         onClick={() => {\r\n                             window.location.href = 'https://jimmyrowland.github.io/Portfolio/build/'}}>Portfolio\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {MessageBoard} from \"./features/messageboard/MessageBoard\";\r\nimport {FlaggyFlag} from \"./features/flaggyFlag/FlaggyFlag\";\r\nimport {TopMenu} from \"./features/navbar/TopMenu\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <TopMenu/>\r\n        <FlaggyFlag />\r\n        <MessageBoard/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../../app/store';\r\n\r\ninterface CounterState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport messagesReducer from '../features/messageboard/messageBoardSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    messages: messagesReducer\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"TopMenu_navbar__2iD0u\",\"placeholder\":\"TopMenu_placeholder__174ok\",\"navbarRight\":\"TopMenu_navbarRight__kuxdE\",\"navLeft\":\"TopMenu_navLeft__3YpS4\",\"navButton\":\"TopMenu_navButton__2yonT\",\"container\":\"TopMenu_container__3x3yG\",\"mbHeader\":\"TopMenu_mbHeader__1eqxr\",\"messageBoard\":\"TopMenu_messageBoard__2MNOe\",\"mbMsgContainer\":\"TopMenu_mbMsgContainer__1uKjT\",\"mbMsg\":\"TopMenu_mbMsg__R7HP9\",\"opacity\":\"TopMenu_opacity__OQb8q\",\"mbForm\":\"TopMenu_mbForm__2V-zU\",\"msgInputTextarea\":\"TopMenu_msgInputTextarea__Fv23r\",\"mbH1\":\"TopMenu_mbH1__3toBc\",\"msgSubmitBtn\":\"TopMenu_msgSubmitBtn__1MNeQ\",\"background\":\"TopMenu_background__1vCyQ\",\"black\":\"TopMenu_black__1sICJ\",\"white\":\"TopMenu_white__O63f9\",\"grey\":\"TopMenu_grey__2PnEO\",\"description\":\"TopMenu_description__PQHKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"FlaggyFlag_navbar__27v3c\",\"placeholder\":\"FlaggyFlag_placeholder__2LKPX\",\"navbarRight\":\"FlaggyFlag_navbarRight__2Y2N5\",\"navLeft\":\"FlaggyFlag_navLeft__2K-8c\",\"navButton\":\"FlaggyFlag_navButton__1pMt9\",\"container\":\"FlaggyFlag_container__1ARVa\",\"mbHeader\":\"FlaggyFlag_mbHeader__2emA5\",\"messageBoard\":\"FlaggyFlag_messageBoard__2wMtx\",\"mbMsgContainer\":\"FlaggyFlag_mbMsgContainer__YwwsQ\",\"mbMsg\":\"FlaggyFlag_mbMsg__paBtd\",\"opacity\":\"FlaggyFlag_opacity__1745z\",\"mbForm\":\"FlaggyFlag_mbForm__2A2P4\",\"msgInputTextarea\":\"FlaggyFlag_msgInputTextarea__1YI2y\",\"mbH1\":\"FlaggyFlag_mbH1__1Wj1i\",\"msgSubmitBtn\":\"FlaggyFlag_msgSubmitBtn__1zhHX\",\"background\":\"FlaggyFlag_background__1ZIGp\",\"black\":\"FlaggyFlag_black__2C_FD\",\"white\":\"FlaggyFlag_white__AF7aF\",\"grey\":\"FlaggyFlag_grey__1j8UG\",\"description\":\"FlaggyFlag_description__35sTU\"};"],"sourceRoot":""}